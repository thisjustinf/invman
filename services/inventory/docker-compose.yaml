services:
  inventory-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: inventory-api
    restart: unless-stopped
    ports:
      - "8001:8000" # Each service uses a different host port
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - JWT_SECRET=${JWT_SECRET}
      - SERVICE_NAME=inventory-svc
    depends_on:
      inventory-db:
        condition: service_healthy
      inventory-cache:
        condition: service_healthy
    env_file:
      - env/.env.${ENVIRONMENT}
    volumes:
      - ./logs:/app/logs
    networks:
      - inventory-network
      - inventory-system-network # Shared network for inter-service communication

  inventory-db:
    image: postgres:17-alpine
    container_name: inventory-db-${ENVIRONMENT}
    restart: unless-stopped
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_SERVER=${POSTGRES_SERVER}
    volumes:
      - inventory-db-data:/var/lib/postgresql/data
      - .:/docker-entrypoint-initdb.d
    ports:
      - "5431:5432" # Each service's DB uses a different host port
    networks:
      - inventory-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  inventory-cache:
    image: redis:alpine
    container_name: inventory-cache-${ENVIRONMENT}
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - inventory-cache-data:/data
    networks:
      - inventory-network
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  inventory-network:
    driver: bridge
  inventory-system-network:
    external: true # This would be created by a root docker-compose file

volumes:
  inventory-db-data:
  inventory-cache-data:
